/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatearcade_studio"]("main",{

/***/ "./public/js/editor/libs/logicblock/block.js":
/*!***************************************************!*\
  !*** ./public/js/editor/libs/logicblock/block.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  renderToCanvas\n} = __webpack_require__(/*! ../../ui/components/ui.three */ \"./public/js/editor/ui/components/ui.three.js\");\n\nconst {\n  SidebarColorPicker,\n  default: showColorPicker\n} = __webpack_require__(/*! ../../ui/utils/colorPicker/ColorPicker */ \"./public/js/editor/ui/utils/colorPicker/ColorPicker.js\");\n\nconst {\n  default: showSidebar\n} = __webpack_require__(/*! ./utils/showSidebar */ \"./public/js/editor/libs/logicblock/utils/showSidebar.ts\");\n\nwindow.Block = function (options) {\n  var vars = {\n    cursor: null,\n    snapback: null,\n    editor: null\n  };\n  var clipboard = null;\n  var timer = null;\n\n  var isDescendant = function (parent, child) {\n    var node = child.parentNode;\n\n    while (node != null) {\n      if (node == parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  var blocks = function () {\n    return $('.block-container');\n  };\n\n  var findBlockFromCursor = function (cursor) {\n    return cursor.closest('.block-container');\n  };\n\n  var selected = function () {\n    return $($('.block-container.selected')[0]);\n  };\n\n  var selectedIndex = function () {\n    return blocks().index(selected());\n  };\n\n  var editables = function () {\n    var block = selected();\n    return block.find('.editable');\n  };\n\n  var selectedEditable = function () {\n    return editables().filter('.selected');\n  };\n\n  var selectedEditableIndex = function () {\n    return editables().index(selectedEditable());\n  };\n\n  var select = function (block) {\n    block.addClass('selected');\n  };\n\n  var clearSelection = function () {\n    $('.block-container.selected').removeClass('selected');\n    $('.block-container .editable').removeClass('selected');\n    $('.w--open').removeClass('w--open');\n  };\n\n  var enableEditable = function (editable, enabled) {\n    var blockText = $(editable.find('.block-text')[0]);\n    blockText.attr('spellcheck', 'false');\n    blockText.attr('contenteditable', enabled);\n\n    if (enabled) {\n      blockText.focus();\n      document.execCommand('selectAll', false, null);\n    }\n  };\n\n  var editBlockText = function () {\n    enableEditable(selectedEditable(), true);\n  };\n\n  var selectPrevBlockEditable = function () {\n    var blockEditables = editables();\n    var editable = selectedEditable();\n    var index = selectedEditableIndex();\n    editable.removeClass('selected');\n    $(blockEditables[Math.max(0, index - 1)]).addClass('selected');\n  };\n\n  var selectNextBlockEditable = function () {\n    var blockEditables = editables();\n    var editable = selectedEditable();\n    var index = selectedEditableIndex();\n    editable.removeClass('selected');\n    $(blockEditables[Math.min(blockEditables.length - 1, index + 1)]).addClass('selected');\n  };\n\n  var addBlockToCursor = function (cursor, newBlock) {\n    var block = findBlockFromCursor(cursor);\n    block.after(newBlock);\n    var cursorBlock = newBlock;\n    var newBlockType = newBlock.attr('block-type');\n\n    if (newBlockType == 'rule' || newBlockType == 'group') {\n      cursorBlock = $(newBlock.find('.block-container')[0]);\n    }\n\n    vars.cursor.selectCursor(cursorBlock);\n    vars.snapback.register();\n  };\n\n  var addBlock = function (param, cursor) {\n    var newBlock = null;\n    newBlock = BlockUI[param.type](param.options, vars.editor);\n    addBlockToCursor(cursor, newBlock);\n  };\n\n  var removeBlock = function () {\n    vars.snapback.register();\n    var block = selected();\n    block.remove();\n  };\n\n  var copyBlock = function () {\n    clipboard = $(selected().clone());\n  };\n\n  var cutBlock = function () {\n    clipboard = $(selected().clone());\n    selected().remove();\n  };\n\n  var pasteBlock = function () {\n    if (clipboard != null) {\n      clearSelection();\n      addBlockToCursor(vars.cursor.getSelectedCursor(), clipboard.clone());\n    }\n  };\n\n  var toggleBlock = function () {\n    var block = selected();\n    block.toggleClass('off');\n  };\n\n  var toggleMinimizeBlock = function () {\n    var block = selected();\n    var type = block.attr('block-type');\n\n    if (type == 'rule' || type == 'group' || type == 'timer') {\n      block.toggleClass('closed');\n      block.find('.block-container').toggleClass('in-closed');\n    }\n  };\n\n  var toggleMinimizeAllBlock = function () {\n    var block = selected();\n    var selectedType = block.attr('block-type');\n\n    if (selectedType == 'rule' || selectedType == 'group' || selectedType == 'timer') {\n      var isClosed = block.hasClass('closed');\n      ['rule', 'group', 'timer'].map(type => {\n        $(`div[block-type=\"${type}\"]`).each(function (index, elm) {\n          isClosed == true ? $(elm).removeClass('closed') : $(elm).addClass('closed');\n          isClosed == true ? $(elm).find('block-container').removeClass('in-closed') : $(elm).find('block-container').addClass('in-closed');\n        });\n      });\n    }\n  };\n\n  var selectPrevBlock = function (cursor) {\n    var items = blocks();\n    var index = selectedIndex();\n\n    if (index < 0) {\n      index = items.index(findBlockFromCursor(cursor));\n    } else {\n      index = Math.max(1, index - 1);\n    }\n\n    var block = items[index];\n\n    while ($(block).attr('block-type') == 'empty' || $(block).hasClass('in-closed')) block = items[Math.max(1, index--)];\n\n    clearSelection();\n    select($(block));\n  };\n\n  var selectNextBlock = function (cursor) {\n    var items = blocks();\n    var index = selectedIndex();\n    if (index < 0) index = items.index(findBlockFromCursor(cursor));\n    index = Math.min(items.length - 1, index + 1);\n    var block = items[index];\n\n    while (($(block).attr('block-type') == 'empty' || $(block).hasClass('in-closed')) && block != null && index < items.length) block = items[Math.min(items.length - 1, index++)];\n\n    if (block != null && $(block).attr('block-type') != 'empty') {\n      clearSelection();\n      select($(block));\n    }\n  };\n\n  var selectPrevCursorFromBlock = function (block) {\n    vars.cursor.selectCursor(block);\n    $.Topic('select-prev-cursor').publish();\n  };\n\n  var selectNextCursorFromBlock = function (block) {\n    vars.cursor.selectCursor(block);\n  };\n\n  var undo = function () {\n    vars.snapback.undo();\n  };\n\n  var redo = function () {\n    vars.snapback.redo();\n  };\n\n  var DomFromJSON = function (parent, json) {\n    json.forEach(obj => {\n      switch (obj.type) {\n        case 'rule':\n          var rule = BlockUI.rule(obj);\n          $(parent).append(rule);\n          rule.find('> .rule > .rule-action-container').each(function (index) {\n            DomFromJSON($(this), obj.children[index]);\n          });\n          break;\n\n        case 'group':\n          var group = BlockUI.group(obj);\n          $(parent).append(group);\n          DomFromJSON(group.find('> .group > .rule-action-container'), obj.children);\n          break;\n\n        case 'timer':\n          var timer = BlockUI.timer(obj);\n          $(parent).append(timer);\n          DomFromJSON(timer.find('> .rule > .rule-action-container'), obj.children);\n          break;\n\n        default:\n          $(parent).append(BlockUI[obj.type](obj, vars.editor));\n          break;\n      }\n    });\n  };\n\n  var BlockToJSON = function (block, keys) {\n    var json = {};\n    json['type'] = block.attr('block-type');\n    json['off'] = block.hasClass('off');\n    keys.forEach(key => {\n      json[key] = block.find('.block-text.' + key).text();\n    });\n    return json;\n  };\n\n  var DomToJSON = function (parent, json) {\n    $(parent).find('> .block-container').each(function () {\n      var block = $(this);\n      var blockType = block.attr('block-type');\n      var obj = {\n        type: blockType,\n        off: block.hasClass('off'),\n        minimized: block.hasClass('closed')\n      };\n\n      switch (blockType) {\n        case 'empty':\n          break;\n\n        case 'rule':\n          obj.conditions = block.find('> .rule > .when-this-happens-container > .block-text').text();\n          obj.name = block.find('.rule-top > .block-text')[0].innerText;\n          json.push(obj);\n          obj['children'] = {};\n          block.find('> .rule > .rule-action-container').each(function (index) {\n            var children = [];\n            DomToJSON($(this), children);\n            obj['children'][index] = children;\n          });\n          break;\n\n        case 'group':\n          obj.name = block.find('> .group > .group-top > .block-text')[0].innerText;\n          json.push(obj);\n          obj['children'] = [];\n          DomToJSON(block.find('> .group > .rule-action-container'), obj.children);\n          break;\n\n        case 'timer':\n          obj.conditions = block.find('.w-dropdown.conditions .block-text').text();\n          let durationsBlocks = block.find('[data-key=\"duration\"] > .block-text');\n\n          if (durationsBlocks.length > 1) {\n            obj.duration = durationsBlocks[0].innerText;\n          } else {\n            obj.duration = durationsBlocks.text();\n          }\n\n          obj.name = block.find('.rule-top > .block-text')[0].innerText;\n          json.push(obj);\n          obj['children'] = [];\n          DomToJSON(block.find('> .rule > .rule-action-container'), obj.children);\n          break;\n\n        case 'change':\n          obj.uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.objectType = block.find('.w-dropdown.objects').attr('data-objectType');\n          obj.property = block.find('.w-dropdown.properties').find('.block-text').text();\n          obj.property = obj.property == 'select property' ? \"\" : obj.property;\n          obj.attribute = block.find('.w-dropdown.attributes').find('.block-text').text();\n          obj.attribute = obj.attribute == 'select attribute' ? \"\" : obj.attribute;\n          obj.values = {};\n\n          if (obj.property == 'animation' && obj.attribute) {\n            obj.values.id = block.find('.w-dropdown.attributes').attr('data-objectType');\n          }\n\n          if (obj.attribute) {\n            if (obj.attribute == 'active camera') {\n              obj.values.cameraType = block.find('.w-dropdown.cameras').attr('data-objecttype');\n              obj.values.cameraUuid = block.find('.w-dropdown.cameras').attr('data-uuid');\n            }\n\n            block.find('.w-dropdown.attributes').nextAll().each(function (index, e) {\n              var self = $(e);\n\n              if (self.hasClass('movements') || self.hasClass('cam-movements')) {\n                // console.log(\"obj b4 uuid\", JSON.parse(JSON.stringify(obj)));\n                obj.values['uuid'] = self.attr('data-uuid');\n                obj.values['objectType'] = self.attr('data-objectType'); // console.log(\"obj post uuid\", JSON.parse(JSON.stringify(obj)));\n              } else if (self.hasClass('easings')) {\n                var key = self.attr('data-key');\n                obj.values[key] = self.attr('data-easing');\n                obj.values[key + 'Type'] = self.attr('data-type');\n              } else {\n                var key = self.attr('data-key');\n\n                if (key != undefined && key != '') {\n                  obj.values[key] = self.find('.block-text').text();\n                  if (self.hasClass('filter') && obj.values[key] == 'refraction') obj.values['map'] = 'refractionFilter';\n                }\n              }\n            });\n          }\n\n          json.push(obj);\n          break;\n\n        case 'timeline':\n          obj.action = block.find('.w-dropdown.actions').attr('data-key');\n          block.find('.w-dropdown.actions').nextAll().each(function (index, e) {\n            var self = $(e);\n\n            if (self.hasClass('connects')) {\n              obj['connect'] = self.find('.block-text').text();\n            } else if (!self.hasClass('timelines')) {\n              var key = self.attr('data-key');\n              obj[key] = self.find('.block-text').text();\n            } else {\n              obj.index = self.attr('data-key');\n            }\n          });\n          json.push(obj);\n          break;\n\n        case 'add':\n          var keys = ['x', 'y', 'z', 'relative', 'match'];\n          obj = BlockToJSON(block, keys);\n          obj.srcUuid = block.find('.w-dropdown.srcMesh').attr('data-src-uuid');\n          obj.destUuid = block.find('.w-dropdown.destMesh').attr('data-dest-uuid');\n          obj.srcTag = block.find('.w-dropdown.srcTags').attr('data-uuid');\n          obj.destTag = block.find('.w-dropdown.destTags').attr('data-uuid');\n          json.push(obj);\n          break;\n\n        case 'remove':\n          obj.uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.objectType = block.find('.w-dropdown.objects').attr('data-objectType');\n          obj.tag = block.find('.w-dropdown.tags').attr('data-uuid');\n          json.push(obj);\n          break;\n\n        case 'trigger':\n          var keys = ['trigger', 'key', 'keyEvent', 'mouse', 'mouseEventType', 'mouseClickEvent', 'mouseMoveEvent'];\n          json.push(BlockToJSON(block, keys));\n          break;\n\n        case 'attribute':\n          obj.uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.objectType = block.find('.w-dropdown.objects').attr('data-objectType');\n          obj.attribute = block.find('.w-dropdown.attributes').attr('data-attribute');\n\n          if (obj.attribute != undefined) {\n            block.find('.w-dropdown.attributes').nextAll().each(function (index, e) {\n              var self = $(e);\n              var key = self.attr('data-key');\n\n              if (key != undefined && key != '') {\n                obj[key] = self.find('.block-text').text();\n              }\n            });\n          }\n\n          json.push(obj);\n          break;\n\n        case 'collision':\n          obj.uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.tag = block.find('.w-dropdown.tags').attr('data-uuid');\n          obj.targetUuid = block.find('.w-dropdown.targetObjects').attr('data-uuid');\n          obj.targetTag = block.find('.w-dropdown.targetTags').attr('data-uuid');\n          obj.condition = block.find('.w-dropdown.condition').find('.block-text').text();\n          json.push(obj);\n          break;\n\n        case 'selection':\n          var obj = {\n            type: blockType,\n            off: block.hasClass('off')\n          };\n          obj.uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.tag = block.find('.w-dropdown.tags').attr('data-uuid');\n          obj.condition = block.find('.w-dropdown.condition').find('.block-text').text();\n          json.push(obj);\n          break;\n\n        case 'link':\n          var keys = ['target', 'url'];\n          obj = BlockToJSON(block, keys);\n          json.push(obj);\n          break;\n\n        case 'play':\n          var action = block.find('.w-dropdown.actions').attr('data-type');\n          obj.action = action ? action : 'play';\n          var mode = block.find('.w-dropdown.modes').attr('data-type');\n          obj.mode = mode ? mode : 'audio';\n          obj.audio = block.find('.w-dropdown.audios').attr('data-uuid');\n          obj.audioId = block.find('.w-dropdown.audios').attr('data-type');\n          obj.video = block.find('.w-dropdown.videos').attr('data-uuid');\n          obj.videoId = block.find('.w-dropdown.videos').attr('data-type');\n          obj.animation = block.find('.w-dropdown.animations').attr('data-uuid');\n          obj.animationId = block.find('.w-dropdown.animations').attr('data-type');\n          obj.objectType = block.find('.w-dropdown.objects').attr('data-type');\n          obj.objectUuid = block.find('.w-dropdown.objects').attr('data-uuid');\n          obj.map = block.find('.w-dropdown.maps').attr('data-type');\n          obj.sensitivity = parseInt(block.find('[data-key=\"sensitivity\"] > .block-text').text());\n          obj.iterationCount = parseInt(block.find('[data-key=\"iterationCount\"] > .block-text').text());\n          obj.iterationType = block.find('.iteration-type .dropdown > .block-text').text();\n          obj.jumpToAndPlayOrPause = block.find('.jump-to-and-play-or-pause .dropdown > .block-text').text();\n          obj.frame = block.find('[data-key=\"frame\"] > .block-text').text();\n          obj.framerate = block.find('[data-key=\"framerate\"] > .block-text').text();\n          obj.frameRate = block.find('[data-key=\"framerate\"] > .block-text').text();\n          json.push(obj);\n          break;\n\n        default:\n          json.push(obj);\n          break;\n      }\n    });\n  };\n\n  this.construct = function (options) {\n    $.extend(vars, options);\n  };\n\n  this.construct(options);\n  return {\n    clearSelectedBlocks: function () {\n      var editable = $('.block-container .editable.selected');\n      enableEditable(editable, false);\n      clearSelection();\n    },\n    getSelectedBlock: function () {\n      return selected();\n    },\n    subscribe: function () {\n      $.Topic('add-block').subscribe(addBlock);\n      $.Topic('remove-block').subscribe(removeBlock);\n      $.Topic('copy-block').subscribe(copyBlock);\n      $.Topic('cut-block').subscribe(cutBlock);\n      $.Topic('paste-block').subscribe(pasteBlock);\n      $.Topic('toggle-block').subscribe(toggleBlock);\n      $.Topic('select-prev-block').subscribe(selectPrevBlock);\n      $.Topic('select-next-block').subscribe(selectNextBlock);\n      $.Topic('select-prev-cursor-from-block').subscribe(selectPrevCursorFromBlock);\n      $.Topic('select-next-cursor-from-block').subscribe(selectNextCursorFromBlock);\n      $.Topic('edit-block-text').subscribe(editBlockText);\n      $.Topic('select-prev-block-editable').subscribe(selectPrevBlockEditable);\n      $.Topic('select-next-block-editable').subscribe(selectNextBlockEditable);\n      $.Topic('toggle-minimize-block').subscribe(toggleMinimizeBlock);\n      $.Topic('toggle-minimize-all-block').subscribe(toggleMinimizeAllBlock);\n      $.Topic('undo').subscribe(undo);\n      $.Topic('redo').subscribe(redo);\n    },\n    fromJSON: function (json) {\n      $('#logicblockspace').empty();\n      $('#logicblockspace').append(BlockUI.empty());\n      DomFromJSON($('#logicblockspace')[0], json);\n      vars.cursor.clearSelectedCursor();\n    },\n    toJSON: function () {\n      var json = [];\n      DomToJSON($('#logicblockspace')[0], json);\n      return json;\n    },\n    initEvents: function () {\n      $(document).on('click', '.block-container', function (e) {\n        e.stopPropagation();\n        clearSelection();\n        select($(this));\n      });\n      $(document).on('dragstart', '.block-container', function (e) {\n        e.stopPropagation();\n        clearSelection();\n        vars.snapback.disable();\n        $(this).addClass('outlined');\n        e.originalEvent.dataTransfer.setDragImage($('#drag-ghost')[0], 0, 0);\n      });\n      $(document).on('dragend', '.block-container', function (e) {\n        e.stopPropagation();\n        var block = $(this);\n        var cursor = vars.cursor.getSelectedCursor();\n        block.removeClass('outlined');\n        vars.snapback.enable();\n        if (!isDescendant(block[0], cursor[0])) addBlockToCursor(cursor, block);\n      });\n      $(document).on('dragover', '.block-container.closed > .rule', function (e) {\n        var block = $(this).closest('.block-container');\n        timer = setTimeout(function () {\n          block.removeClass('closed');\n        }, 1500);\n      });\n      $(document).on('drag', '.block-container.closed > .rule', function (e) {\n        clearTimeout(timer);\n      });\n      $(document).on('dragleave', '.block-container.closed > .rule', function (e) {\n        clearTimeout(timer);\n      });\n      $(document).on('dblclick', '.block', function (e) {\n        e.stopPropagation();\n      });\n      $(document).on('dblclick', '.block.editable', function (e) {\n        e.stopPropagation();\n        var editable = $(this);\n        editable.addClass('selected');\n        enableEditable(editable, true);\n      });\n      $(document).on('keydown', '.block.editable', function (e) {\n        e.stopPropagation();\n\n        if (e.keyCode == 13) {\n          e.preventDefault();\n          var editable = $(this);\n          editable.removeClass('selected');\n          enableEditable(editable, false);\n        }\n      });\n      $(document).on('click', '.block.toggle', function (e) {\n        var self = $(this);\n        var prev = self.prev();\n        var parent = self.parent();\n        var uuid = parent.find('.w-dropdown.objects').data('uuid');\n        var objectType = parent.find('.w-dropdown.objects').data('objectType');\n        var attribute = parent.find('.w-dropdown.attributes').find('.block-text').text();\n        var blockType = self.closest('.block-container').attr('block-type');\n        var textBlock = self.find('.block-text');\n        var newText = self.attr('data-toggle');\n        self.attr('data-toggle', textBlock.text());\n        textBlock.text(newText);\n\n        if (blockType == 'timeline' && self.hasClass('condition')) {\n          prev.toggle();\n        } else if (blockType == 'add' && self.hasClass('relative')) {\n          self.nextAll('.destMesh').toggle();\n          self.nextAll('.toggle').toggle();\n\n          if (self.nextAll('.destMesh').attr('data-dest-uuid') == 'Tag' && self.text() == 'relative to object') {\n            self.nextAll('.destTags').show();\n          } else {\n            self.nextAll('.destTags').hide();\n          }\n        } else if (blockType == 'change' && (prev.hasClass('filter') || prev.hasClass('limit-axis'))) {\n          if (newText == 'on') {\n            var prev = self.prev();\n            var dropdown = prev.prev();\n            var type = prev.find('.block-text').text();\n\n            if (attribute == 'filter') {\n              BlockUI.attributeFieldsForChange(vars.editor, prev, uuid, objectType, prev.find('.block-text').text(), {\n                enabled: 'on'\n              });\n            } else {\n              prev.remove();\n              BlockUI.attributeFieldsForChange(vars.editor, dropdown, uuid, objectType, attribute, {\n                axis: type,\n                enabled: 'on',\n                type: 'min'\n              });\n            }\n          } else {\n            self.nextAll().remove();\n          }\n        }\n      });\n      $(document).on('click', '.block.dropdown:not(.only-two-items)', function (e) {\n        e.stopPropagation();\n        $('.w-dropdown-list.w--open').removeClass('w--open');\n        $(this).next().addClass('w--open');\n      });\n      $(document).on('click', '.block.dropdown.only-two-items', function (e) {\n        e.stopPropagation();\n        $('.w-dropdown-list.w--open').removeClass('w--open'); // $(this).next().addClass('w--open');\n\n        let selected = $(this).find(\".block-text\").text();\n        let options = $(this).parent().find('.w-dropdown-list > *');\n        Array.from(options).find(elem => {\n          if (elem.innerText !== selected) {\n            elem.click();\n          }\n\n          return elem.innerText !== selected;\n        });\n      });\n      $(document).on('click', '.block.color-picker', function (e) {\n        var self = $(this);\n        var input = self.find('input');\n        var text = self.prev().find('.block-text');\n        var color = input.prev(); // showSidebar();\n\n        showColorPicker(text.get(0));\n        vars.editor.showColorPicker = !vars.editor.showColorPicker;\n        vars.editor.signals.showColorPickerChanged.dispatch(true, input.val(), function (c) {\n          input.val(c);\n          text.text(c);\n          color.css('background-color', c);\n        });\n      });\n      $(document).on('click', '.block.image-picker', function (e) {\n        var self = $(this);\n        var loading = $(self.find('.w-lightbox-spinner')[0]);\n        var canvas = self.find('canvas')[0];\n        var assetId = self.closest('.image-picker').next();\n        const filter = self.data(\"accept\") ?? \"image/*\"; //self.find('input')[0].click();\n\n        UtilsHelper.chooseSingleFile(function (files) {\n          // Promise.all( editor.loader.loadFiles( files, null, 'Image') ).then( function ( results ) {\n          // \tvar assets = {};\n          // \tfor ( var result of results ) {\n          // \t\tconst isHDR = result.filename.includes('.hdr');\n          // \t\tvar asset = editor.assets.uploadImage( result.texture, isHDR );\n          // \t\tassets[result.filename] = asset;\n          // \t\tloading.show();\n          // \t}\n          // \tvar image = result.texture.image;\n          // \tvar formData = new FormData();\n          // \tformData.append( 'type', 'Image' );\n          // \tformData.append( 'projectId', editor.projectId );\n          // \tfor ( let i = 0; i < files.length; i++ ) {\n          // \t\tformData.append( 'file', files[i] );\n          // \t}\n          // \teditor.api.post( '/asset/my-image/upload', formData ).then( res => {\n          // \t\tfor ( var file of res.files ) {\n          // \t\t\tassets[ file.name ].id = file.id;\n          // \t\t\tassets[ file.name ].imageId = file.imageId;\n          // \t\t\tvar context = canvas.getContext( '2d' );\n          // \t\t\tvar scale = canvas.width / image.width;\n          // \t\t\t// context.drawImage( image, 0, 0, image.width * scale, image.height * scale );\n          // \t\t\tif ( image.data === undefined ) {\n          // \t\t\t\tcontext.drawImage( image, 0, 0, image.width * scale, image.height * scale );\n          // \t\t\t} else {\n          // \t\t\t\tvar canvas2 = renderToCanvas( result.texture );\n          // \t\t\t\tcontext.drawImage( canvas2, 0, 0, image.width * scale, image.height * scale );\n          // \t\t\t}\n          // \t\t\tassetId.find('.block-text').text(file.id);\n          // \t\t\tloading.hide();\n          // \t\t}\n          // \t} )\n          // } );\n          loadAndUploadFiles({\n            canvas,\n            files,\n            loading,\n            self\n          });\n        }, filter);\n      });\n      $(document).on('dragover', '.block.image-picker', function (e) {\n        e.preventDefault();\n      });\n      $(document).on('drop', '.block.image-picker', function (e) {\n        var self = $(this);\n        var canvas = self.find('canvas')[0];\n        var assetType = e.originalEvent.dataTransfer.getData('assetType');\n        var loading = $(self.find('.w-lightbox-spinner')[0]);\n        var assetId = e.originalEvent.dataTransfer.getData('assetId');\n        var context = canvas.getContext('2d');\n\n        if (assetType == 'Image') {\n          var texture = editor.assets.get('Image', 'id', assetId).texture;\n          var image = texture.image;\n          var scale = canvas.width / image.width;\n          context.drawImage(image, 0, 0, image.width * scale, image.height * scale);\n          self.next().find('.block-text').text(assetId);\n        } else if (assetType == \"Environment\") {\n          var asset = editor.assets.get('Environment', 'id', assetId);\n\n          if (typeof asset == 'undefined') {\n            editor.api.post('/asset/my-environment/add', {\n              id: assetId,\n              projectId: editor.projectId,\n              folderId: 0\n            }).then(function (environment) {\n              // editor.addAsset('Image', 0, environment).then(function (asset) {\n              // \tconsole.log(\"Uploaded asset\", asset);\n              // \tassetId= asset.id;\n              // \tapplyTexture()\n              // });\n              fetch(environment.url).then(res => {\n                return res.blob();\n              }).then(blob => {\n                const file = new File([blob], asset.name + '.hdr');\n                let files = [file];\n                loadAndUploadFiles({\n                  canvas,\n                  files,\n                  loading,\n                  self\n                });\n              });\n            }).catch(err => {\n              alert(err);\n            });\n          } else {\n            fetch(asset.url).then(res => {\n              return res.blob();\n            }).then(blob => {\n              const file = new File([blob], asset.name + '.hdr');\n              let files = [file];\n              loadAndUploadFiles({\n                files,\n                canvas,\n                loading,\n                self\n              });\n            });\n          }\n\n          function applyTexture() {\n            var asset = editor.assets.get('Image', 'id', assetId);\n            let texture = asset.texture;\n            const image = texture.image;\n            var scale = canvas.width / image.width;\n            var canvas2 = renderToCanvas(texture);\n            context.drawImage(canvas2, 0, 0, image.width * scale, image.height * scale);\n            self.next().find('.block-text').text(assetId);\n          }\n        }\n      });\n\n      function loadAndUploadFiles({\n        files,\n        loading,\n        self,\n        canvas\n      }) {\n        Promise.all(editor.loader.loadFiles(files, null, 'Image')).then(function (results) {\n          var assets = {};\n\n          for (var result of results) {\n            const isHDR = result.filename.includes('.hdr');\n            var asset = editor.assets.uploadImage(result.texture, isHDR);\n            assets[result.filename] = asset;\n            loading.show();\n          }\n\n          var image = result.texture.image;\n          var formData = new FormData();\n          formData.append('type', 'Image');\n          formData.append('projectId', editor.projectId);\n\n          for (let i = 0; i < files.length; i++) {\n            formData.append('file', files[i]);\n          }\n\n          editor.api.post('/asset/my-image/upload', formData).then(res => {\n            for (var file of res.files) {\n              assets[file.name].id = file.id;\n              assets[file.name].imageId = file.imageId;\n              var context = canvas.getContext('2d');\n              var scale = canvas.width / image.width;\n\n              if (image.data === undefined) {\n                context.drawImage(image, 0, 0, image.width * scale, image.height * scale);\n              } else {\n                var canvas2 = renderToCanvas(result.texture);\n                context.drawImage(canvas2, 0, 0, image.width * scale, image.height * scale);\n              }\n\n              self.closest('.image-picker').next().find('.block-text').text(file.id);\n              loading.hide();\n            }\n          });\n        });\n      }\n\n      $(document).on('change', '.block.image-picker > input', function (e) {\n        /*var self = $(this);\n        var canvas = self.prev()[0];\n        var assetId = self.closest('.image-picker').next();\n        \tvar file = e.target.files[0];\n        var reader = new FileReader();\n        \treader.readAsDataURL( file );\n        if ( file.type.match( 'image.*' ) ) {\n        \t\treader.addEventListener( 'load', function ( event ) {\n        \t\t\tvar image = document.createElement( 'img' );\n        \t\timage.addEventListener( 'load', function () {\n        \t\t\t\tvar texture = new THREE.Texture( this );\n        \t\t\ttexture.sourceFile = file.name;\n        \t\t\ttexture.format = file.type === 'image/jpeg' ? THREE.RGBFormat : THREE.RGBAFormat;\n        \t\t\ttexture.needsUpdate = true;\n        \t\t\t\tvar context = canvas.getContext( '2d' );\n        \t\t\tvar scale = canvas.width / image.width;\n        \t\t\tcontext.drawImage( image, 0, 0, image.width * scale, image.height * scale );\n        \t\t\t\tvar newId = Date.now();\n        \t\t\t\teditor.assets.images[0].items.push({\n        \t\t\t\tid: newId,\n        \t\t\t\ttexture: texture\n        \t\t\t});\n        \t\t\t\tassetId.find('.block-text').text(newId);\n        \t\t\t}, false );\n        \t\t\timage.src = event.target.result;\n        \t\t}, false );\n        }*/\n      });\n      $(document).on('click', '.dropdown-link', function (e) {\n        var self = $(this);\n        var text = self.text();\n        var block = self.closest('.block-container');\n        var dropdown = self.closest('.w-dropdown');\n        var prevText = dropdown.find('.block-text').text();\n        var blockType = block.attr('block-type');\n\n        if (text != prevText || self.attr('data-uuid') != dropdown.attr('data-uuid')) {\n          dropdown.find('.block-text').text(text);\n\n          if (dropdown.hasClass('easings')) {\n            dropdown.attr('data-easing', self.attr('data-easing'));\n            dropdown.attr('data-type', self.attr('data-type'));\n          } else {\n            var dataType = self.attr('data-type');\n            var dataUuid = self.attr('data-uuid');\n\n            if (blockType == 'trigger') {\n              if (dropdown.hasClass('trigger')) {\n                if (text == 'key') {\n                  block.find('.key-trigger').show();\n                  block.find('.mouse-trigger').hide();\n                } else {\n                  block.find('.key-trigger').hide();\n\n                  if (block.find('.block-text.mouseEventType').text() == 'click') {\n                    block.find('.mouse-trigger').show();\n                    block.find('.move-event').hide();\n                  } else {\n                    block.find('.mouse-trigger').show();\n                    block.find('.click-event').hide();\n                  }\n                }\n              } else if (dropdown.hasClass('mouse-event-type')) {\n                if (text == 'click') {\n                  block.find('.click-event').show();\n                  block.find('.move-event').hide();\n                } else {\n                  block.find('.click-event').hide();\n                  block.find('.move-event').show();\n                }\n              }\n            } else if (blockType == 'change') {\n              var objectType = block.find('.w-dropdown.objects').attr('data-objectType');\n              var uuid = block.find('.w-dropdown.objects').attr('data-uuid');\n\n              if (dropdown.hasClass('objects') || dropdown.hasClass('movements') || dropdown.hasClass('cameras') || dropdown.hasClass('attributes') || dropdown.hasClass('cam-movements')) {\n                dropdown.attr('data-uuid', dataUuid);\n                dropdown.attr('data-objectType', dataType);\n              }\n\n              if (dropdown.hasClass('objects')) {\n                dropdown.nextAll().remove();\n                dropdown.after(BlockUI.propertyDropdownForChange(vars.editor, dataUuid, dataType));\n              } else if (dropdown.hasClass('properties')) {\n                dropdown.nextAll().remove();\n                dropdown.after(BlockUI.attributeDropdownForChange(vars.editor, dropdown.prev().attr('data-uuid'), dataType));\n              } else if (dropdown.hasClass('attributes') || dropdown.hasClass('filter') || dropdown.hasClass('subdropdown')) {\n                BlockUI.attributeFieldsForChange(vars.editor, dropdown, uuid, objectType, dataType, {});\n              } else if (dropdown.hasClass('movements')) {\n                var prev = dropdown.prev();\n                var objectType = block.find('.w-dropdown.objects').attr('data-objectType');\n                var movementType = prev.find('.block-text').text();\n                BlockUI.attributeFieldsForChange(vars.editor, prev, uuid, objectType, movementType, {\n                  movementType: movementType,\n                  uuid: dataUuid,\n                  objectType: dataType\n                });\n              } else if (dropdown.hasClass('actions')) {\n                var prev = dropdown.prev();\n                var animationName = prev.find('.block-text').text();\n                var actionName = dropdown.find('.block-text').text();\n                BlockUI.attributeFieldsForChange(vars.editor, dropdown, uuid, objectType, animationName, {\n                  action: actionName\n                });\n              }\n            } else if (blockType == 'timeline') {\n              dropdown.attr('data-key', dataType);\n\n              if (dropdown.hasClass('actions')) {\n                BlockUI.timelineAttributes(vars.editor, dropdown, dataType, {});\n              }\n            } else if (blockType == 'attribute') {\n              var data = {\n                objectType: block.find('.w-dropdown.objects').attr('data-objectType'),\n                uuid: dataUuid,\n                type: dataType\n              };\n              BlockUI.attributeConditions(dropdown, data, {});\n            } else if (blockType == 'collision') {\n              dropdown.attr('data-uuid', dataUuid);\n\n              if (dropdown.hasClass('objects') || dropdown.hasClass('targetObjects')) {\n                dataType != 'Tag' ? dropdown.next().hide() : dropdown.next().show();\n              }\n            } else if (blockType == 'remove' || blockType == 'selection') {\n              dropdown.attr('data-uuid', dataUuid);\n              dropdown.attr('data-objectType', dataType);\n\n              if (dropdown.hasClass('objects')) {\n                dataType == 'Tag' ? dropdown.next().show() : dropdown.next().hide();\n              }\n            } else if (blockType == 'add') {\n              if (dropdown.hasClass('srcMesh') || dropdown.hasClass('destMesh')) {\n                var className = dropdown.hasClass('srcMesh') ? 'data-src-uuid' : 'data-dest-uuid';\n                dropdown.attr(className, dataUuid);\n                dataType != 'Tag' ? dropdown.next().hide() : dropdown.next().show();\n              } else {\n                dropdown.attr('data-uuid', dataUuid);\n              }\n            } else if (blockType == 'play') {\n              dropdown.attr('data-uuid', dataUuid);\n              dropdown.attr('data-type', dataType);\n\n              if (dropdown.hasClass('objects')) {\n                block.find('.play-video-animation').show();\n\n                if (dataType == 'Scene' || dataType == 'SpotLight') {\n                  block.find('.play-video-animation.mesh').hide();\n                  dropdown.next().find('.block-text').text(dataType == 'Scene' ? 'texture' : 'map');\n                } else {\n                  block.find('.play-video-animation.scene').hide();\n                }\n              } else if (dropdown.hasClass('modes')) {\n                var parent = dropdown.parent();\n                var actions = parent.find('.actions');\n                var action = actions.find('.block-text').text();\n                parent.find('.audios').hide();\n                parent.find('.videos').hide();\n                parent.find('.animations').hide();\n\n                if (text == 'audio') {\n                  actions.replaceWith(BlockUIElement.dropdown('actions', '', 'block', action, Global.playActions));\n                  parent.find('.audios').show();\n                  parent.find('.play-video-animation').hide();\n                  parent.find('.play-animation').hide();\n                } else {\n                  if (text == 'video') {\n                    actions.replaceWith(BlockUIElement.dropdown('actions', '', 'block', action, Global.playActions));\n                    parent.find('.play-animation').hide();\n                    parent.find('.videos').show();\n                  } else {\n                    actions.replaceWith(BlockUIElement.dropdown('actions', '', 'block', action, Global.playAnimationActions));\n                    parent.find('.play-animation').show();\n                    parent.find('.play-animation.frame').hide();\n                    parent.find('.animations').show();\n                  }\n\n                  parent.find('.play-video-animation').show();\n\n                  if (parent.find('.w-dropdown.objects').attr('data-type') == 'Scene') {\n                    parent.find('.play-video-animation.mesh').hide();\n                  } else {\n                    parent.find('.play-video-animation.scene').hide();\n                  }\n                }\n              } else if (dropdown.hasClass('actions')) {\n                var parent = dropdown.parent();\n                var action = dropdown.find('.block-text').text();\n                var frame = parent.find('.play-animation.frame');\n\n                if (action == \"jump to frame\") {\n                  frame.show();\n                } else {\n                  frame.hide();\n                }\n              }\n            } else {\n              dropdown.attr('data-uuid', dataUuid);\n              dropdown.attr('data-objectType', dataType);\n            }\n          }\n        }\n\n        block.find('.w-dropdown-list.w--open').removeClass('w--open');\n      });\n      $(document).on('click', '.when-this-happens', function (e) {\n        var self = $(this);\n        var block = self.find('.block-text');\n        var text = block.attr('data-toggle');\n        block.attr('data-toggle', block.text());\n        block.text(text);\n      });\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/js/editor/libs/logicblock/block.js\n");

/***/ })

});